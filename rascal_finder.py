# -*- coding: utf-8 -*-
"""Copy of RAScalFinder.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19FGBsLRLtuvxbd5G2IbSaoBmP2o75DfT
"""

from time import gmtime, strftime, localtime
from requests_html import HTMLSession
import nest_asyncio
import requests
from bs4 import BeautifulSoup

def find_calories_intake(command):
    query = command.replace(" ", "+")
    
    nest_asyncio.apply()
    session = HTMLSession()
    url = 'https://www.google.com/search?q=' + query + '+calories'

    r = session.get(url)
    soup = BeautifulSoup(r.text, features="lxml")

    ans=None
    comments=None

    try:
        for tag in soup.find_all(attrs={"data-attrid":"kc:/food/food:energy"})[0]:
            ans = tag.text.partition("calories")[0]
    except IndexError:
        for tag in soup.find_all(attrs={"data-tts":"answers"}):
            ans = tag.text.partition("calories")[0]
        if(ans==None):
            for tag in soup.find_all(attrs={"data-attrid":"wa:/description"}):
                comments = tag.text
            if(comments==None):
                comments = "I didn't find anything."
    
    return(strftime("%Y-%m-%d %H:%M:%S", localtime()), command, ans, comments)

def find_calories_expenditure(command):
    #weight_in_kg = "70"
    #gender = "male"
    #query = weight_in_kg+ 'kg'+ gender+ 'by' + command.replace(" ", "+")
    query = command.replace(" ", "+")
    
    nest_asyncio.apply()
    session = HTMLSession()
    url = 'https://www.google.com/search?q=calories+burned+by+' + query

    r = session.get(url)
    soup = BeautifulSoup(r.text, features="lxml")

    ans=None
    comments=None

    try:
        for tag in soup.find_all(attrs={"data-attrid":"kc:/food/food:energy"})[0]:
            ans = tag.text.partition("calories")[0]
    except IndexError:
        for tag in soup.find_all(attrs={"data-tts":"answers"}):
            ans = tag.text.partition("calories")[0]
        if(ans==None):
            for tag in soup.find_all(attrs={"data-attrid":"wa:/description"}):
                comments = tag.text
            if(comments==None):
                comments = "I didn't find anything."
    
    return(strftime("%Y-%m-%d %H:%M:%S", localtime()), command, ans, comments)
